module.exports = {
  plugins: ['react', 'prettier'],
  extends: ['eslint:recommended', 'plugin:react/recommended', 'plugin:prettier/recommended'],

  rules: {
    'prettier/prettier': ['error', { endOfLine: 'auto' }, { usePrettierrc: true }],
    'react/jsx-uses-react': 'error',
    'react/jsx-uses-vars': 'error',
    'for-direction': 'error',
    'getter-return': ['error', { allowImplicit: true }],
    'no-async-promise-executor': 'error',
    'no-await-in-loop': 'error',
    'no-compare-neg-zero': 'error',
    'no-cond-assign': ['error', 'always'],
    'no-const-assign': 'error',
    'no-constant-condition': 'error',
    'no-control-regex': 'error',
    'no-debugger': 'error',
    'no-dupe-args': 'error',
    'no-dupe-else-if': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-duplicate-imports': 'error',
    'no-empty-pattern': 'error',
    'no-fallthrough': 'error',
    'no-func-assign': 'error',
    'no-import-assign': 'error',
    'no-new-symbol': 'error',
    'no-self-assign': 'error',
    'no-self-compare': 'error',
    'no-obj-calls': 'error',
    'no-promise-executor-return': 'error',
    'no-unsafe-optional-chaining': 'error',
    'no-unused-vars': 'error',
    'use-isnan': 'error',
    'no-use-before-define': 'error',
    'require-atomic-updates': 'error',
    'arrow-body-style': ['error', 'as-needed'],
    'block-scoped-var': 'error',
    camelcase: ['error', { properties: 'never' }],
    'consistent-return': 'error',
    'default-case': 'error',
    'default-case-last': 'error',
    eqeqeq: ['error', 'always'],
    'func-name-matching': ['error', 'always'],
    'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
    'guard-for-in': 'error',
    'id-length': ['error', { min: 3, properties: 'never', exceptions: ['id'] }],
    'no-confusing-arrow': 'error',
    'no-console': 1,
    'no-delete-var': 'error',
    'no-else-return': 'error',
    'no-empty': 'error',
    'no-empty-function': 'error',
    'no-eq-null': 'error',
    'no-eval': 'error',
    'no-floating-decimal': 'error',
    'no-global-assign': 'error',
    'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    'no-iterator': 'error',
    'no-multi-assign': 'error',
    'no-multi-str': 'error',
    'no-new-func': 'error',
    'no-new-object': 'error',
    'no-new-wrappers': 'error',
    'no-redeclare': 'error',
    'no-shadow': 'error',
    'no-unneeded-ternary': 'error',
    'no-useless-concat': 'error',
    'no-useless-return': 'error',
    'no-var': 'error',
    'no-void': 'error',
    'object-shorthand': 'error',
    'prefer-arrow-callback': 'error',
    'prefer-const': 'error',
    'prefer-destructuring': ['error', { object: true, array: false }],
    'prefer-object-spread': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    radix: 'error',
    'require-await': 'error',
  },
  env: {
    es6: true,
    browser: true,
    es2021: true,
    node: true,
    commonjs: true,
  },

  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    allowImportExportEverywhere: true,
    ecmaFeatures: {
      jsx: true,
    },
  },
  settings: {
    'import/resoler': {
      node: {
        extension: [',js', 'jsx'],
      },
    },
    react: {
      version: 'detect',
      pragma: 'React',
      fragment: 'Fragment',
    },
    propWrapperFunctions: [
      'forbidExtraProps',
      { property: 'freeze', object: 'Object' },
      { property: 'myFavoriteWrapper' },
      { property: 'forbidExtraProps', exact: true },
    ],
  },
};
